app LocalBites {
  wasp: {
    version: "^0.11.4"
  },
  title: "LocalBites",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
  id Int @id @default(autoincrement())
  username String @unique
  password String
  interests String
  preferences String
  matches Match[]
  events Event[]
psl=}

entity Match {=psl
  id Int @id @default(autoincrement())
  user1 User @relation(name: "User1Matches", fields: [user1Id], references: [id])
  user1Id Int
  user2 User @relation(name: "User2Matches", fields: [user2Id], references: [id])
  user2Id Int
psl=}

entity Restaurant {=psl
  id Int @id @default(autoincrement())
  yelpId String
  name String
  location String
  cuisine String
  rating Float
  description String
psl=}

entity Event {=psl
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  dateTime DateTime
  description String
psl=}

action createEvent {
  fn: import { createEvent } from "@server/actions.js",
  entities: [Event, User]
}

action updateUserPreferences {
  fn: import { updateUserPreferences } from "@server/actions.js",
  entities: [User]
}

query getUserMatches {
  fn: import { getUserMatches } from "@server/queries.js",
  entities: [Match, User]
}

query getRestaurant {
  fn: import { getRestaurant } from "@server/queries.js",
  entities: [Restaurant]
}

query getEvents {
  fn: import { getEvents } from "@server/queries.js",
  entities: [Event, User]
}

route ProfileRoute { path: "/profile/:userId", to: ProfilePage }
page ProfilePage {
  component: import { ProfilePage } from "@client/pages/Profile.jsx",
  authRequired: true
}

route RestaurantRoute { path: "/restaurant/:restaurantId", to: RestaurantPage }
page RestaurantPage {
  component: import { Restaurant } from "@client/Restaurant.jsx",
  authRequired: true
}

route EventsRoute { path: "/events", to: EventsPage }
page EventsPage {
  component: import { Events } from "@client/pages/Events.jsx",
  authRequired: true
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}
